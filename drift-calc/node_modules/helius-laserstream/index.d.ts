/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export declare function shutdownAllStreams(): void
export declare function getActiveStreamCount(): number
export const enum CommitmentLevel {
  PROCESSED = 0,
  CONFIRMED = 1,
  FINALIZED = 2
}
export declare class LaserstreamClient {
  constructor(endpoint: string, token?: string | undefined | null, maxReconnectAttempts?: number | undefined | null, channelOptions?: object | undefined | null, replay?: boolean | undefined | null)
  subscribe(request: any, callback: (error: Error | null, updateBytes: Uint8Array) => void): Promise<StreamHandle>
}
export declare class StreamHandle {
  id: string
  cancel(): void
  write(request: any): void
}
