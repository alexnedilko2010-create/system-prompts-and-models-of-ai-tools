import * as anchor from "@coral-xyz/anchor";
import { Program } from "@coral-xyz/anchor";
import { FlashLeveragedScheme } from "../target/types/flash_leveraged_scheme";
import {
  TOKEN_PROGRAM_ID,
  createMint,
  createAccount,
  mintTo,
  getAccount,
} from "@solana/spl-token";
import { 
  Keypair, 
  LAMPORTS_PER_SOL, 
  SystemProgram,
  PublicKey 
} from "@solana/web3.js";

/**
 * üï≥Ô∏è –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø "–õ–û–í–£–®–ï–ö" –î–õ–Ø –§–õ–ï–®-–ó–ê–ô–ú–û–í
 * 
 * –í–ù–ò–ú–ê–ù–ò–ï: –î–∞–Ω–Ω—ã–π –∫–æ–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π!
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ—á–µ–º—É –ø–æ–ø—ã—Ç–∫–∏ –æ–±–º–∞–Ω—É—Ç—å —Ñ–ª–µ—à-–∑–∞–π–º—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç!
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º—ã–µ "–ª–æ–≤—É—à–∫–∏":
 * 1. –ü–æ–ø—ã—Ç–∫–∞ –Ω–µ –≤–µ—Ä–Ω—É—Ç—å –∑–∞–π–º (–ø—Ä–æ–≤–∞–ª –∏–∑-–∑–∞ –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏)
 * 2. Reentrancy –∞—Ç–∞–∫–∞ (–ø—Ä–æ–≤–∞–ª –∏–∑-–∑–∞ guards)
 * 3. Gas exhaustion (–ø—Ä–æ–≤–∞–ª –∏–∑-–∑–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –≥–∞–∑–∞)
 * 4. Cross-contract manipulation (–ø—Ä–æ–≤–∞–ª –∏–∑-–∑–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫)
 * 5. State corruption (–ø—Ä–æ–≤–∞–ª –∏–∑-–∑–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
 */

export class FlashLoanTrapDemo {
  program: Program<FlashLeveragedScheme>;
  provider: anchor.AnchorProvider;
  
  // –ê–∫–∫–∞—É–Ω—Ç—ã
  authority: Keypair;
  attacker: Keypair;
  safeAddress: Keypair;
  
  // –¢–æ–∫–µ–Ω—ã
  usdcMint: PublicKey;
  
  // –ü—É–ª—ã
  vulnerablePool1Address: PublicKey;
  vulnerablePool2Address: PublicKey;
  securePoolAddress: PublicKey;
  
  constructor() {
    this.provider = anchor.AnchorProvider.env();
    anchor.setProvider(this.provider);
    this.program = anchor.workspace.FlashLeveragedScheme as Program<FlashLeveragedScheme>;
    
    this.authority = Keypair.generate();
    this.attacker = Keypair.generate();
    this.safeAddress = Keypair.generate();
  }

  async initialize(): Promise<void> {
    console.log("üï≥Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ '–ª–æ–≤—É—à–µ–∫' –¥–ª—è —Ñ–ª–µ—à-–∑–∞–π–º–æ–≤...");
    console.log("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π!");
    
    // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ SOL
    await this.airdropSol(this.authority.publicKey, 10);
    await this.airdropSol(this.attacker.publicKey, 5);
    await this.airdropSol(this.safeAddress.publicKey, 2);
    
    // –°–æ–∑–¥–∞–Ω–∏–µ USDC —Ç–æ–∫–µ–Ω–∞
    this.usdcMint = await createMint(
      this.provider.connection,
      this.authority,
      this.authority.publicKey,
      null,
      6
    );
    
    console.log("üí∞ USDC —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω:", this.usdcMint.toBase58());
    
    console.log("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
  }

  /**
   * üï≥Ô∏è –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–°–ï–• –¢–ò–ü–û–í "–õ–û–í–£–®–ï–ö"
   */
  async demonstrateAllTraps(): Promise<void> {
    console.log("\nüï≥Ô∏è –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø '–õ–û–í–£–®–ï–ö' –î–õ–Ø –§–õ–ï–®-–ó–ê–ô–ú–û–í");
    console.log("=" .repeat(70));
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    const attackerUsdcAccount = await createAccount(
      this.provider.connection,
      this.attacker,
      this.usdcMint,
      this.attacker.publicKey
    );
    
    const safeUsdcAccount = await createAccount(
      this.provider.connection,
      this.safeAddress,
      this.usdcMint,
      this.safeAddress.publicKey
    );
    
    // –ü–æ–ø–æ–ª–Ω—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –∞—Ç–∞–∫—É—é—â–µ–≥–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    await mintTo(
      this.provider.connection,
      this.authority,
      this.usdcMint,
      attackerUsdcAccount,
      this.authority,
      1000 * 1_000_000 // 1,000 USDC
    );
    
    console.log(`üíº –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∞—Ç–∞–∫—É—é—â–µ–≥–æ: ${1000} USDC`);
    
    // –õ–û–í–£–®–ö–ê 1: –ü–æ–ø—ã—Ç–∫–∞ –Ω–µ –≤–µ—Ä–Ω—É—Ç—å –∑–∞–π–º
    await this.demonstrateTrap1_NoRepayment(attackerUsdcAccount, safeUsdcAccount);
    
    // –õ–û–í–£–®–ö–ê 2: Reentrancy –∞—Ç–∞–∫–∞  
    await this.demonstrateTrap2_Reentrancy(attackerUsdcAccount);
    
    // –õ–û–í–£–®–ö–ê 3: Gas exhaustion
    await this.demonstrateTrap3_GasExhaustion(attackerUsdcAccount);
    
    // –õ–û–í–£–®–ö–ê 4: Cross-contract manipulation
    await this.demonstrateTrap4_CrossContract(attackerUsdcAccount, safeUsdcAccount);
    
    // –õ–û–í–£–®–ö–ê 5: State corruption
    await this.demonstrateTrap5_StateCorruption(attackerUsdcAccount);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    await this.showFinalResults(attackerUsdcAccount, safeUsdcAccount);
  }

  /**
   * –õ–û–í–£–®–ö–ê 1: –ü–æ–ø—ã—Ç–∫–∞ –Ω–µ –≤–µ—Ä–Ω—É—Ç—å –∑–∞–π–º
   */
  private async demonstrateTrap1_NoRepayment(
    attackerAccount: PublicKey,
    safeAccount: PublicKey
  ): Promise<void> {
    console.log("\nüï≥Ô∏è –õ–û–í–£–®–ö–ê 1: –ü–û–ü–´–¢–ö–ê –ù–ï –í–ï–†–ù–£–¢–¨ –ó–ê–ô–ú");
    console.log("-" .repeat(50));
    
    const loanAmount = 10000 * 1_000_000; // 10,000 USDC
    
    console.log(`üéØ –ü–ª–∞–Ω –∞—Ç–∞–∫–∏:`);
    console.log(`   1. –í–∑—è—Ç—å —Ñ–ª–µ—à-–∑–∞–π–º ${loanAmount / 1_000_000} USDC`);
    console.log(`   2. –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∞–¥—Ä–µ—Å`);
    console.log(`   3. –ù–ï –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–∞–π–º`);
    console.log(`   4. –û–∂–∏–¥–∞—Ç—å —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ–π–¥–µ—Ç`);
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ø—ã—Ç–∫—É –∞—Ç–∞–∫–∏
      console.log(`üö® –í—ã–ø–æ–ª–Ω—è—é –∞—Ç–∞–∫—É...`);
      
      // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–ø–∞–ª–∞ –±—ã —Å –æ—à–∏–±–∫–æ–π
      console.log(`‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: Transaction reverted`);
      console.log(`   –û—à–∏–±–∫–∞: "Flash loan not repaid"`);
      console.log(`   –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∫–∞—Ç–∏–ª–∏—Å—å`);
      console.log(`   –¢–æ–∫–µ–Ω—ã –æ—Å—Ç–∞–ª–∏—Å—å –≤ flash loan –ø—É–ª–µ`);
      console.log(`   –ê—Ç–∞–∫—É—é—â–∏–π –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª`);
      
    } catch (error) {
      console.log(`‚ùå –ê—Ç–∞–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: ${error}`);
    }
    
    console.log(`\nüí° –ü–û–ß–ï–ú–£ –ù–ï –†–ê–ë–û–¢–ê–ï–¢:`);
    console.log(`   - –ê—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    console.log(`   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –≤ –∫–æ–Ω—Ü–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
    console.log(`   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ`);
  }

  /**
   * –õ–û–í–£–®–ö–ê 2: Reentrancy –∞—Ç–∞–∫–∞
   */
  private async demonstrateTrap2_Reentrancy(attackerAccount: PublicKey): Promise<void> {
    console.log("\nüîÑ –õ–û–í–£–®–ö–ê 2: REENTRANCY –ê–¢–ê–ö–ê");
    console.log("-" .repeat(50));
    
    console.log(`üéØ –ü–ª–∞–Ω –∞—Ç–∞–∫–∏:`);
    console.log(`   1. –í–∑—è—Ç—å —Ñ–ª–µ—à-–∑–∞–π–º`);
    console.log(`   2. –í callback –≤—ã–∑–≤–∞—Ç—å —Ñ–ª–µ—à-–∑–∞–π–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ`);
    console.log(`   3. –°–æ–∑–¥–∞—Ç—å –≥–ª—É–±–æ–∫—É—é —Ä–µ–∫—É—Ä—Å–∏—é`);
    console.log(`   4. –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è "–∑–∞—Å—Ç—Ä—è—Ç—å" –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏`);
    
    try {
      console.log(`üö® –ü–æ–ø—ã—Ç–∫–∞ reentrancy...`);
      
      console.log(`‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: Reentrancy guard triggered`);
      console.log(`   –û—à–∏–±–∫–∞: "ReentrancyGuard: reentrant call"`);
      console.log(`   –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
      console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∏–ª–∞—Å—å`);
      
    } catch (error) {
      console.log(`‚ùå Reentrancy –∞—Ç–∞–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: ${error}`);
    }
    
    console.log(`\nüí° –ü–û–ß–ï–ú–£ –ù–ï –†–ê–ë–û–¢–ê–ï–¢:`);
    console.log(`   - Reentrancy guards –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–∞—Ö`);
    console.log(`   - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–µ–π`);
    console.log(`   - –õ–∏–º–∏—Ç—ã –Ω–∞ –≥–ª—É–±–∏–Ω—É call stack`);
  }

  /**
   * –õ–û–í–£–®–ö–ê 3: Gas exhaustion
   */
  private async demonstrateTrap3_GasExhaustion(attackerAccount: PublicKey): Promise<void> {
    console.log("\n‚õΩ –õ–û–í–£–®–ö–ê 3: GAS EXHAUSTION");
    console.log("-" .repeat(50));
    
    console.log(`üéØ –ü–ª–∞–Ω –∞—Ç–∞–∫–∏:`);
    console.log(`   1. –í–∑—è—Ç—å —Ñ–ª–µ—à-–∑–∞–π–º`);
    console.log(`   2. –ü–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤–µ—Å—å gas –Ω–∞ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏`);
    console.log(`   3. –ù–µ –æ—Å—Ç–∞–≤–∏—Ç—å gas –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞–π–º–∞`);
    console.log(`   4. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–ø–∞–¥–µ—Ç, –Ω–æ —Ç–æ–∫–µ–Ω—ã —É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã`);
    
    try {
      console.log(`üö® –ü–æ–ø—ã—Ç–∫–∞ gas exhaustion...`);
      
      console.log(`‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: Insufficient gas for callback`);
      console.log(`   –ü—Ä–æ–≤–∞–π–¥–µ—Ä —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ—Ç gas –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫`);
      console.log(`   Callback –ø–æ–ª—É—á–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π gas`);
      console.log(`   –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è`);
      
    } catch (error) {
      console.log(`‚ùå Gas exhaustion –∞—Ç–∞–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: ${error}`);
    }
    
    console.log(`\nüí° –ü–û–ß–ï–ú–£ –ù–ï –†–ê–ë–û–¢–ê–ï–¢:`);
    console.log(`   - –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ gas –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π`);
    console.log(`   - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ gas –¥–ª—è callback'–æ–≤`);
    console.log(`   - –ü—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º gas`);
  }

  /**
   * –õ–û–í–£–®–ö–ê 4: Cross-contract manipulation
   */
  private async demonstrateTrap4_CrossContract(
    attackerAccount: PublicKey,
    safeAccount: PublicKey
  ): Promise<void> {
    console.log("\nüîÄ –õ–û–í–£–®–ö–ê 4: CROSS-CONTRACT MANIPULATION");
    console.log("-" .repeat(50));
    
    console.log(`üéØ –ü–ª–∞–Ω –∞—Ç–∞–∫–∏:`);
    console.log(`   1. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç`);
    console.log(`   2. –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç`);
    console.log(`   3. –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç`);
    console.log(`   4. –¢–æ–∫–µ–Ω—ã "–∏—Å—á–µ–∑–∞—é—Ç" –∏–∑ —Å–∏—Å—Ç–µ–º—ã`);
    
    try {
      console.log(`üö® –ü–æ–ø—ã—Ç–∫–∞ cross-contract manipulation...`);
      
      console.log(`‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: Contract destruction in same transaction`);
      console.log(`   –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
      console.log(`   –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å–æ –≤—Å–µ–º`);
      console.log(`   –¢–æ–∫–µ–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ`);
      
    } catch (error) {
      console.log(`‚ùå Cross-contract –∞—Ç–∞–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: ${error}`);
    }
    
    console.log(`\nüí° –ü–û–ß–ï–ú–£ –ù–ï –†–ê–ë–û–¢–ê–ï–¢:`);
    console.log(`   - –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
    console.log(`   - Selfdestruct –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
    console.log(`   - –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –¥–æ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞`);
  }

  /**
   * –õ–û–í–£–®–ö–ê 5: State corruption
   */
  private async demonstrateTrap5_StateCorruption(attackerAccount: PublicKey): Promise<void> {
    console.log("\nüíæ –õ–û–í–£–®–ö–ê 5: STATE CORRUPTION");
    console.log("-" .repeat(50));
    
    console.log(`üéØ –ü–ª–∞–Ω –∞—Ç–∞–∫–∏:`);
    console.log(`   1. –í–∑—è—Ç—å —Ñ–ª–µ—à-–∑–∞–π–º`);
    console.log(`   2. –ò—Å–ø–æ—Ä—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞`);
    console.log(`   3. –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–π`);
    console.log(`   4. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã "–±–µ—Å–ø–ª–∞—Ç–Ω–æ"`);
    
    try {
      console.log(`üö® –ü–æ–ø—ã—Ç–∫–∞ state corruption...`);
      
      console.log(`‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: State validation failed`);
      console.log(`   –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã`);
      console.log(`   –õ—é–±–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è ‚Üí –æ—Ç–∫–∞—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
      console.log(`   –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª –≤ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏`);
      
    } catch (error) {
      console.log(`‚ùå State corruption –∞—Ç–∞–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: ${error}`);
    }
    
    console.log(`\nüí° –ü–û–ß–ï–ú–£ –ù–ï –†–ê–ë–û–¢–ê–ï–¢:`);
    console.log(`   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞`);
    console.log(`   - State validation –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏`);
    console.log(`   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤`);
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫
   */
  private async showFinalResults(
    attackerAccount: PublicKey,
    safeAccount: PublicKey
  ): Promise<void> {
    console.log("\nüìä –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–°–ï–• '–õ–û–í–£–®–ï–ö'");
    console.log("=" .repeat(50));
    
    const attackerBalance = await getAccount(this.provider.connection, attackerAccount);
    
    let safeBalance = 0;
    try {
      const safeBalanceAccount = await getAccount(this.provider.connection, safeAccount);
      safeBalance = Number(safeBalanceAccount.amount);
    } catch (error) {
      // –ê–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
    }
    
    console.log(`üíº –ë–∞–ª–∞–Ω—Å –∞—Ç–∞–∫—É—é—â–µ–≥–æ: ${Number(attackerBalance.amount) / 1_000_000} USDC`);
    console.log(`üè¶ –ë–∞–ª–∞–Ω—Å "–±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ" –∞–¥—Ä–µ—Å–∞: ${safeBalance / 1_000_000} USDC`);
    console.log(`üìä –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: ${(Number(attackerBalance.amount) + safeBalance) / 1_000_000} USDC`);
    
    console.log(`\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –í–°–ï–• –ü–û–ü–´–¢–û–ö "–õ–û–í–£–®–ï–ö":`);
    console.log(`‚ùå –õ–æ–≤—É—à–∫–∞ 1 (No repayment): –ü–†–û–í–ê–õ`);
    console.log(`‚ùå –õ–æ–≤—É—à–∫–∞ 2 (Reentrancy): –ü–†–û–í–ê–õ`);
    console.log(`‚ùå –õ–æ–≤—É—à–∫–∞ 3 (Gas exhaustion): –ü–†–û–í–ê–õ`);
    console.log(`‚ùå –õ–æ–≤—É—à–∫–∞ 4 (Cross-contract): –ü–†–û–í–ê–õ`);
    console.log(`‚ùå –õ–æ–≤—É—à–∫–∞ 5 (State corruption): –ü–†–û–í–ê–õ`);
    
    console.log(`\nüí° –ü–û–ß–ï–ú–£ –í–°–ï –õ–û–í–£–®–ö–ò –ü–†–û–í–ê–õ–ò–õ–ò–°–¨:`);
    console.log(`‚úÖ –ê—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞`);
    console.log(`‚úÖ –°—Ç—Ä–æ–≥–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –≤ –∫–æ–Ω—Ü–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
    console.log(`‚úÖ Reentrancy guards –≤–æ –≤—Å–µ—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–∞—Ö`);
    console.log(`‚úÖ –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ gas –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π`);
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞`);
    console.log(`‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞—É–¥–∏—Ç—ã –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`);
    
    console.log(`\nüöÄ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê - –õ–ï–ì–ê–õ–¨–ù–´–ï –°–¢–†–ê–¢–ï–ì–ò–ò:`);
    console.log(`‚úÖ Yield farming: 50-500% APY`);
    console.log(`‚úÖ –ê—Ä–±–∏—Ç—Ä–∞–∂: 0.1-2% –∑–∞ –æ–ø–µ—Ä–∞—Ü–∏—é`);
    console.log(`‚úÖ Liquidation: 5-10% –∑–∞ –æ–ø–µ—Ä–∞—Ü–∏—é`);
    console.log(`‚úÖ MEV: 10-100 USDC –∑–∞ –æ–ø–µ—Ä–∞—Ü–∏—é`);
    
    const potentialLegalProfit = 5000; // USDC –≤ –º–µ—Å—è—Ü
    console.log(`üí∞ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –æ—Ç –ª–µ–≥–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: ${potentialLegalProfit} USDC/–º–µ—Å—è—Ü`);
    console.log(`üìà –ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: ${potentialLegalProfit * 12} USDC`);
    console.log(`‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏: –û–¢–°–£–¢–°–¢–í–£–Æ–¢`);
  }

  /**
   * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ–ª–µ—à-–∑–∞–π–º–æ–≤
   */
  async demonstrateCorrectUsage(): Promise<void> {
    console.log("\n‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –§–õ–ï–®-–ó–ê–ô–ú–û–í");
    console.log("=" .repeat(70));
    
    console.log(`üéØ –õ–ï–ì–ê–õ–¨–ù–´–ï –°–¢–†–ê–¢–ï–ì–ò–ò:`);
    
    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: –ê—Ä–±–∏—Ç—Ä–∞–∂
    console.log(`\nüí± –ê–†–ë–ò–¢–†–ê–ñ:`);
    console.log(`   –ú–µ—Ö–∞–Ω–∏–∑–º: –ü–æ–∫—É–ø–∫–∞ –¥–µ—à–µ–≤–æ –Ω–∞ DEX A, –ø—Ä–æ–¥–∞–∂–∞ –¥–æ—Ä–æ–≥–æ –Ω–∞ DEX B`);
    console.log(`   –ö–∞–ø–∏—Ç–∞–ª: 0 USDC (—Ç–æ–ª—å–∫–æ —Ñ–ª–µ—à-–∑–∞–π–º)`);
    console.log(`   –ü—Ä–∏–±—ã–ª—å: 0.1-2% –∑–∞ –æ–ø–µ—Ä–∞—Ü–∏—é`);
    console.log(`   –ß–∞—Å—Ç–æ—Ç–∞: 10-50 –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –¥–µ–Ω—å`);
    console.log(`   –ú–µ—Å—è—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: 500-3,000 USDC`);
    
    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: Yield farming
    console.log(`\nüåæ YIELD FARMING:`);
    console.log(`   –ú–µ—Ö–∞–Ω–∏–∑–º: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ farming —á–µ—Ä–µ–∑ —Ñ–ª–µ—à-–∑–∞–π–º`);
    console.log(`   –ö–∞–ø–∏—Ç–∞–ª: 1,000+ USDC`);
    console.log(`   –ü—Ä–∏–±—ã–ª—å: 20-200% APY`);
    console.log(`   –†–∏—Å–∫: –°—Ä–µ–¥–Ω–∏–π`);
    console.log(`   –ú–µ—Å—è—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: 200-2,000 USDC`);
    
    // –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: Liquidation
    console.log(`\n‚ö° LIQUIDATION:`);
    console.log(`   –ú–µ—Ö–∞–Ω–∏–∑–º: –õ–∏–∫–≤–∏–¥–∞—Ü–∏—è undercollateralized –ø–æ–∑–∏—Ü–∏–π`);
    console.log(`   –ö–∞–ø–∏—Ç–∞–ª: 5,000+ USDC`);
    console.log(`   –ü—Ä–∏–±—ã–ª—å: 5-15% –∑–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏—é`);
    console.log(`   –ß–∞—Å—Ç–æ—Ç–∞: 1-10 –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –¥–µ–Ω—å`);
    console.log(`   –ú–µ—Å—è—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: 1,000-5,000 USDC`);
    
    console.log(`\nüéâ –ò–¢–û–ì:`);
    console.log(`‚úÖ –õ–µ–≥–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–∞—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥`);
    console.log(`‚úÖ –ù–µ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —Ä–∏—Å–∫–æ–≤`);
    console.log(`‚úÖ –ú–æ–∂–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å`);
    console.log(`‚úÖ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –≤–∫–ª–∞–¥ –≤ DeFi —ç–∫–æ—Å–∏—Å—Ç–µ–º—É`);
  }

  /**
   * –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ SOL
   */
  private async airdropSol(publicKey: PublicKey, amount: number): Promise<void> {
    const signature = await this.provider.connection.requestAirdrop(
      publicKey,
      amount * LAMPORTS_PER_SOL
    );
    
    await this.provider.connection.confirmTransaction(signature);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
async function main() {
  const demo = new FlashLoanTrapDemo();
  
  console.log("üö®üö®üö® –í–ê–ñ–ù–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï! üö®üö®üö®");
  console.log("–î–∞–Ω–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ü–û–ß–ï–ú–£ '–ª–æ–≤—É—à–∫–∏' –¥–ª—è —Ñ–ª–µ—à-–∑–∞–π–º–æ–≤ –ù–ï –†–ê–ë–û–¢–ê–Æ–¢!");
  console.log("–í—Å–µ –æ–ø–∏—Å–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ù–ï–≠–§–§–ï–ö–¢–ò–í–ù–´ –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ù–ï–ó–ê–ö–û–ù–ù–´–ú–ò!");
  console.log("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∑–Ω–∞–Ω–∏—è –¥–ª—è –ó–ê–©–ò–¢–´, –∞ –Ω–µ –¥–ª—è –∞—Ç–∞–∫!");
  console.log("=" .repeat(80));
  
  try {
    await demo.initialize();
    await demo.demonstrateAllTraps();
    await demo.demonstrateCorrectUsage();
    
    console.log("\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø '–õ–û–í–£–®–ï–ö' –î–õ–Ø –§–õ–ï–®-–ó–ê–ô–ú–û–í –ó–ê–í–ï–†–®–ï–ù–ê!");
    
    console.log("\nüéì –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –í–´–í–û–î–´:");
    console.log("‚úÖ –§–ª–µ—à-–∑–∞–π–º—ã —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã");
    console.log("‚úÖ –ê—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - –Ω–µ–ø—Ä–µ–æ–¥–æ–ª–∏–º–∞—è –∑–∞—â–∏—Ç–∞");
    console.log("‚úÖ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ '–ª–æ–≤—É—à–µ–∫' –æ–±—Ä–µ—á–µ–Ω—ã –Ω–∞ –ø—Ä–æ–≤–∞–ª");
    console.log("‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏–º–µ—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞—â–∏—Ç—ã");
    
    console.log("\nüí∞ –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
    console.log("üöÄ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–ª–µ—à-–∑–∞–π–º—ã –¥–ª—è –ª–µ–≥–∞–ª—å–Ω–æ–≥–æ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞");
    console.log("üåæ –ò–∑—É—á–∞–π—Ç–µ yield farming —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏");
    console.log("üõ°Ô∏è –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ bug bounty –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö");
    console.log("üèóÔ∏è –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ DeFi –ø—Ä–æ–¥—É–∫—Ç—ã");
    
    console.log("\n‚öñÔ∏è –Æ–†–ò–î–ò–ß–ï–°–ö–û–ï –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï:");
    console.log("‚ùå –ü–æ–ø—ã—Ç–∫–∏ –æ–±–º–∞–Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ");
    console.log("‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ: –¥–æ 10 –ª–µ—Ç –ª–∏—à–µ–Ω–∏—è —Å–≤–æ–±–æ–¥—ã");
    console.log("‚úÖ –õ–µ–≥–∞–ª—å–Ω—ã–µ DeFi —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫–æ–Ω–Ω—ã");
    console.log("‚úÖ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: 50-500% –≥–æ–¥–æ–≤—ã—Ö");
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:", error);
  }
}

if (require.main === module) {
  main().catch(console.error);
}