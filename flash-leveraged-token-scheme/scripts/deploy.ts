import * as anchor from "@coral-xyz/anchor";
import { Program } from "@coral-xyz/anchor";
import { FlashLeveragedScheme } from "../target/types/flash_leveraged_scheme";
import { Keypair, LAMPORTS_PER_SOL } from "@solana/web3.js";
import fs from "fs";

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Å—Ö–µ–º—ã —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
 */

async function deploy() {
  console.log("üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ Flash Leveraged Scheme...");
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  const provider = anchor.AnchorProvider.env();
  anchor.setProvider(provider);
  
  const program = anchor.workspace.FlashLeveragedScheme as Program<FlashLeveragedScheme>;
  
  console.log("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:");
  console.log("- Program ID:", program.programId.toBase58());
  console.log("- Cluster:", provider.connection.rpcEndpoint);
  console.log("- Wallet:", provider.wallet.publicKey.toBase58());
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
  const balance = await provider.connection.getBalance(provider.wallet.publicKey);
  console.log("- –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞:", balance / LAMPORTS_PER_SOL, "SOL");
  
  if (balance < 2 * LAMPORTS_PER_SOL) {
    console.log("‚ö†Ô∏è  –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 2 SOL –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è");
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  const config = {
    programId: program.programId.toBase58(),
    cluster: provider.connection.rpcEndpoint,
    wallet: provider.wallet.publicKey.toBase58(),
    deployedAt: new Date().toISOString(),
    version: "1.0.0"
  };
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  fs.writeFileSync(
    "./config/deployment.json",
    JSON.stringify(config, null, 2)
  );
  
  console.log("‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã!");
  console.log("üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ ./config/deployment.json");
  
  // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
  console.log("\nüìñ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:");
  console.log("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ: npm run demo");
  console.log("2. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã: npm test");
  console.log("3. –ò–∑—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: README.md");
  
  console.log("\n‚ö†Ô∏è  –í–ê–ñ–ù–´–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:");
  console.log("- –¢—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ –≤ RISK_ANALYSIS.md");
  console.log("- –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Å—É–º–º");
  console.log("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø–æ—Ç–µ—Ä—é –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–µ—Ç–µ —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å");
  console.log("- –î–∞–Ω–Ω–∞—è —Å—Ö–µ–º–∞ –Ω–µ—Å–µ—Ç —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏");
}

deploy().catch(console.error);